// Generated by CoffeeScript 2.3.1
(function() {
  var $, $$, $posts, c$, render, request;
  $ = function(...args) {
    return document.querySelector(...args);
  };
  $$ = function(...args) {
    return document.querySelectorAll(...args);
  };
  c$ = function(...args) {
    return document.createElement(...args);
  };
  request = function(url, params, cb) {
    var field, firstParam, name, req;
    if (!cb) {
      cb = params;
      params = {};
    }
    firstParam = true;
    for (name in params) {
      field = params[name];
      if (firstParam) {
        url += `?${name}=${encodeURIComponent(field)}`;
        firstParam = false;
      } else {
        url += `&${name}=${encodeURIComponent(field)}`;
      }
    }
    req = new XMLHttpRequest;
    req.onload = function() {
      return cb(req.response);
    };
    req.open("GET", url);
    return req.send();
  };
  $posts = $("#posts");
  render = function(posts) {
    var $c, $p, content, i, j, len, len1, post, ref, results;
    results = [];
    for (i = 0, len = posts.length; i < len; i++) {
      post = posts[i];
      $p = c$("div");
      $p.className = "post";
      ref = post.content;
      for (j = 0, len1 = ref.length; j < len1; j++) {
        content = ref[j];
        if (content.tag === "Text") {
          $c = c$("p");
          $c.innerText = content.text;
        } else if (content.tag === "ImageFull") {
          $c = c$("img");
          $c.src = "/file/" + content.filenames[content.filenames.length - 1].filename;
        }
        $p.appendChild($c);
      }
      results.push($posts.appendChild($p));
    }
    return results;
  };
  return request("/getFeed", {
    count: 1,
    offset: 0
  }, function(resp) {
    console.log(resp);
    return render(JSON.parse(resp));
  });
})();
